


# read modules - chapter - list of topics
# makes a data app for each one - in the

# Check if the JSON path is correct and the file is not empty

#rm data/odyssey/*.md

#file_names=$(jq -r '.modules[].title | gsub(" "; "-") | ascii_downcase | gsub("[^a-z0-9-]"; "") + ".md"' data/robotics-odyssey/modules.json)


#file_names=$(jq -r '.modules[].title | gsub(" "; "-") | ascii_downcase | gsub("[^a-z0-9-]"; "") + ".md"' data/robotics-odyssey/modules.json)
submodule_file_names=$(jq -r '.modules[].sub_modules[] | gsub(" "; "-") | ascii_downcase | gsub("[^a-z0-9-]"; "")' data/odyssey/modules.json)
# echo $submodule_file_names

# #echo $file_names

for filename in $submodule_file_names; do  # Indentation fixed here
    echo "Processing $filename"  # Add a command inside the loop
    # Add your desired command here, for example:
    #mkdir -p "data/odyssey/$filename"
    echo "---" > "data/odyssey/$filename"
    echo "title: $filename" >> "data/odyssey/$filename"
    echo "toc: true" >> "data/odyssey/$filename"
    echo "---" >> "data/odyssey/$filename"
done
python3 infra/scripts/course_gen_step_2.py --query "gen a markdown of example markdown about the robotics topic " --input_dir data/odyssey/  --output_dir=data/odyssey/


bun run js/convert_md_to_sqlite.js


# ///the course is generated by a modules.json 
# // each submodule is a folder with a index.md

# // this script converts all the md files to a sqlite database
# // each prompt in the modules.json is a prompt that is run on the ai to generate the content of the submodule
# // each prompt makes a file in the folder bucket
# // theres 3 types of files js, md, json, pdf, images, and video, audio
# // the js files are the most important and are the backbone of the course
# //  pdf are preprocessed into images and text + an html for ease of use + storage


# // each course submmodule renders an observable frameowork page
# /// he page has 3 contents
# // title
# // toc
# // content - daigrams + captions + links
# // bibliogrpahy for further reading
# // also thhers a group-chatbot for testing people on their knowledge progress. 

# //the knowledge progress makes everyones robot smarter  -> you can add your own robot to the clsuter for $500 for basic version
# //more robots = more compute = faster results
# // the robots are like mini computers that can run in the background and stream compute to the main computer
# // the main computer is the one that is used to surf the web, run apps, and do other stuff
# // the robots are used to do the heavy lifting of rendering the content and running the ai prompts

